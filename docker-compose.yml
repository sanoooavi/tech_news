version: '3'

services:
  db:
    image: postgres
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env
    networks:
      - app_network

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A tech_news worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - web
      - redis
    env_file:
      - .env
    networks:
      - app_network

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_beat
    command: celery -A tech_news beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - web
      - redis
    env_file:
      - .env
    networks:
      - app_network

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge